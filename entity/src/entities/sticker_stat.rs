//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.3

use sea_orm::entity::prelude::*;
use super::sticker_tag;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "sticker_stat")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub sticker_id: String,
    pub count: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "sticker_tag::Entity",
        from = "Column::StickerId",
        to = "sticker_tag::Column::StickerId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Remotes,
}

impl Related<sticker_tag::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Remotes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
